name: CI/CD1

on: push

jobs:
  
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUBLOGIN }}
          password: ${{ secrets.DOCKERHUBPASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push the Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            sinterklaas16/lammert:latest

  scan: 
    name: Scan 
    needs: [ build ] 
    runs-on: ubuntu-latest 
    steps: 
    - name: Login to Docker Hub 
      uses: docker/login-action@v2 
      with: 
          username: ${{ secrets. DOCKERHUBLOGIN }} 
          password: ${{ secrets. DOCKERHUBPASSWORD }} 
    - name: Docker Scout CVEs 
      uses: docker/scout-action@v1.5.0 
      with: 
          command: cves 
          image: sinterklaas16/lammert:latest
#          only-fixed: true 
#          only-severities: critical,high 
          ignore-base: false 
          ignore-unchanged: false 
          write-comment: true 
          github-token: ${{ secrets. PATTOKEN }} # to be able to write the comment 
#          exit-code: true 
#          exit-on: vulnerability
  
  test:
    name: Test
    needs: [ scan ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUBLOGIN }}
          password: ${{ secrets.DOCKERHUBPASSWORD }}
      - name: test 
        run: |
          docker run -d -p 80:5000 sinterklaas16/lammert:latest
          sleep 10s
          curl http://localhost
          docker ps -aq | xargs docker stop | xargs docker rm

  deploy:
    name: Deploy
    needs: [ test ]
    runs-on: self-hosted
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - run: |
              sudo kubectl delete deployment --all              
              sudo kubectl apply -f ${{ github.workspace }}/kubernetes/deployment.yaml --force
              sudo kubectl apply -f ${{ github.workspace }}/kubernetes/nginx-service.yaml --force

  automated-api-tests:
    runs-on: ubuntu-latest
    needs: [ deploy ]
    steps:
      - uses: actions/checkout@v4
      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}
      - name: Run API tests
        run: |
          postman collection run "${{ github.workspace }}/postman/collections/Lammert.json" -e "12825421-a4bb5b42-d349-443d-b558-db1795347c0c"